<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;
use Drupal\block\Entity\Block;
use Drupal\Core\Url;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 */
function dafr_sub_barrio_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = array(
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  );
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = array(
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  );

  // Vertical custom tabs.
  $form['options'] = [
    '#type' => 'vertical_tabs',
    '#prefix' => '<h2><small>' . t('Theme custom') . '</small></h2>',
    '#weight' => -10,
  ];

	/*--------- Setting Header ------------ */
	$form['header'] = array(
		'#type' => 'details',
		'#attributes' => array(),
		'#title' => t('Typ nagłówka'),
		'#weight' => -998,
		'#group' => 'options',
		'#open' => TRUE,
	);

	$form['header']['default_header'] = array(
		'#type' => 'select',
		'#title' => t('Default Header'),
		'#default_value' => theme_get_setting('default_header'),
		'#options' => array(
			'header' => t('Standard'),
			'header-2' => t('Sticky'),
			'header-3' => t('Background'),
			'no-header' => t('No header')
		),
	);

  	$form['header']['align_header'] = array(
		'#type' => 'select',
		'#title' => t('Wyrównanie menu'),
		'#default_value' => theme_get_setting('align_header'),
		'#options' => array(
			'start' => t('do lewej'),
			'center' => t('na środek'),
			'end' => t('do prawej'),			
		),
	);

  /*--------- Footer Copyright ------------ */
	$form['copyright'] = [
		'#type' => 'details',
		'#title' => t('Copyright'),
		'#group' => 'options',
    '#open' => TRUE,
	];

	$form['copyright']['copyright'] = [
		'#type' => 'textfield',
		'#title' => t('Firma'),
		'#description' => t('Podaj nazwę firmy'),
		'#default_value' => theme_get_setting('copyright'),
		'#size' => 60,
		'#maxlength' => 60,
	];

	$form['copyright']['abel'] = [
		'#type' => 'checkbox',
		'#title' => t('Czy logo Abel-IT'),
		'#default_value' => theme_get_setting('abel'),
	];
}

function dafr_sub_barrio_preprocess_page(&$variables) {

  $sub_theme = \Drupal::config('system.theme')->get('default');
  $theme_path = \Drupal::service('extension.list.theme')->getPath($sub_theme);

  //Header setting -----------
    $header = 'header';
    $footer = 'footer';  
    if(theme_get_setting('default_header')){
      $header = theme_get_setting('default_header');
    }
    
    if(isset($variables['default_header']) && $variables['default_header'] && $variables['default_header']!='_none' ){
      $header = $variables['default_header'];
    }

    if(isset($variables['dafr_header']) && $variables['dafr_header'] && $variables['dafr_header']!='_none' ){
      $header = $variables['dafr_header'];
    }    

    if(isset($variables['dafr_footer']) && $variables['dafr_footer'] && $variables['dafr_footer']!='_none' ){
      $footer = $variables['dafr_footer'];
    }
    
    $header_skin = '';

    if($sub_theme){            
      $theme_path_sub = \Drupal::service('extension.list.theme')->getPath($sub_theme);      
      if(file_exists($theme_path_sub . '/templates/page/' . trim($header) . '.html.twig')){         
        $header_skin  = $theme_path_sub . '/templates/page/' . trim($header) . '.html.twig';        
      }elseif(file_exists($theme_path . '/templates/page/' . trim($header) . '.html.twig')){
        $header_skin  = $theme_path . '/templates/page/' . trim($header) . '.html.twig';
      }
    }else{
      if(file_exists($theme_path . '/templates/page/' . trim($header) . '.html.twig')){
        $header_skin  = $theme_path . '/templates/page/' . trim($header) . '.html.twig';
      }
    }
    //  \Drupal::logger('header_skin')->notice('header_skin: '. $header_skin);
    if(empty($header_skin)) $header_skin = $theme_path . '/templates/page/header.html.twig';

    $variables['theme_path'] = $theme_path;
    $variables['header_skin'] = $header_skin; 
    $variables['align_header'] = theme_get_setting('align_header');
    $align_header = theme_get_setting('align_header') ? theme_get_setting('align_header') : 'end' ;


    /*--------- Pobieranie ustawienia z motywu Copyright ------------ */  
    $variables['copyright'] = theme_get_setting('copyright');

    // Sprawdzenie, czy ustawienie 'abel' jest włączone i dodanie HTML do zmiennej
    $abel = theme_get_setting('abel');
    if ($abel) {    
        $variables['abel'] = true;
    }else
      $variables['abel'] = false;


    // Pozycja MENU 
    $variables['menu_pos'] = theme_get_setting('bootstrap_barrio_navbar_position');

    /*--------- Wyrównanie menu ------------ */
    switch (theme_get_setting('bootstrap_barrio_navbar_offcanvas')) {
    case 'offcanvas-collapse':
      $variables['navbar_offcanvas'] = TRUE;
      $variables['navbar_collapse_class'] = "offcanvas offcanvas-start";
      $variables['navbar_collapse_btn_data'] = "offcanvas";
      break;
    default:
      $variables['navbar_offcanvas'] = FALSE;
      $variables['navbar_collapse_class'] = 'collapse navbar-collapse justify-content-'.$align_header;
      $variables['navbar_collapse_btn_data'] = "collapse";
    }


    // Container
    if ($node = \Drupal::request()->attributes->get('node')) {
      if(is_object($node)){
        if($node->hasField('dafr_node_layout')){
          $layout = $node->get('dafr_node_layout')->value;
          \Drupal::logger('container')->notice(''. $layout);
          if($layout){
            if($layout == 'fw'){
              $variables['container_main'] = 'full-width';
            }elseif($layout == 'container-xxl'){ 
              $variables['container_main'] = 'container-xxl';            
            }elseif($layout == 'container'){ 
              $variables['container_main'] = 'container';   
            } 
          }
        }
      }
    }
        
} 


function dafr_sub_barrio_preprocess_block__system_breadcrumb_block(&$variables){
  $styles = array();
  $bg_image = base_path() . \Drupal::service('extension.list.theme')->getPath('dafr_sub_barrio') . '/assets/images/breadcrumb1.jpg';
  $bg_color = '#1B1525';
  $bg_position = 'center center';
  $bg_repeat = 'no-repeat';
  $text_style = 'text-light';
  
  $variables['attributes']['class'][] = $text_style;
  $styles[] = "background-color: {$bg_color};";
  if($bg_image){
    $styles[] = "background-image: url('{$bg_image}');";
  }
  $styles[] = "background-position: {$bg_position};";
  $styles[] = "background-repeat: {$bg_repeat};";
  $variables['custom_style'] = implode('', $styles);

  //Breadcrumb title
  $title = '';
  $request = \Drupal::request();
  $title = '';
  if ($route = $request->attributes->get(\Drupal\Core\Routing\RouteObjectInterface::ROUTE_OBJECT)) {
    $title = \Drupal::service('title_resolver')->getTitle($request, $route);
  } 
   $variables['breadcrumb_title'] = $title;
}

/**
 * Implements hook_preprocess_HOOK() for block templates.
 */
function dafr_sub_barrio_preprocess_block__block_dafr_banner_block(&$variables) {
  // Sprawdź, czy blok zawiera klucz #block_content
  if (isset($variables['elements']['content']['#block_content'])) {
    $block = $variables['elements']['content']['#block_content'];
    $variables['container_key'] = $block->get('container')->value;
    $variables['align_key'] = $block->get('field_align')->value;
    $variables['valign_key'] = $block->get('field_valign')->value;
    // Dodanie logowania po przypisaniu wartości
    // \Drupal::logger('dafr_banner_block')->notice('Field align value: ' . $variables['field_align']);
  } else {
    // \Drupal::logger('dafr_banner_block')->warning('Block content not set or does not match.');
  }
}

/**
 * Implements hook_preprocess_HOOK() for block templates.
 */
function dafr_sub_barrio_preprocess_block__block_dafr_images_parallax(&$variables) {
  // Sprawdź, czy blok zawiera klucz #block_content
  if (isset($variables['elements']['content']['#block_content'])) {
    $block = $variables['elements']['content']['#block_content'];
    $variables['container_key'] = $block->get('container')->value;
  }
}